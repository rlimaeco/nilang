
Grammar
rule 1    nilang -> header template body_section footer
rule 2    header -> NILANG FLOAT
rule 3    template -> typelines
rule 4    typelines -> typelines typeline
rule 5    typelines -> typeline
rule 6    typeline -> TYPE STRING
rule 7    body_section -> body_lines
rule 8    body_lines -> body_lines body_line
rule 9    body_lines -> body_line
rule 10   body_line -> INT INT INT INT STRING
rule 11   footer -> END

Terminals, with rules where they appear

$ (-1)
error (256)
NILANG (258) 2
TYPE (259) 6
END (260) 11
INT (261) 10
FLOAT (262) 2
STRING (263) 6 10

Nonterminals, with rules where they appear

nilang (9)
    on left: 1
header (10)
    on left: 2, on right: 1
template (11)
    on left: 3, on right: 1
typelines (12)
    on left: 4 5, on right: 3 4
typeline (13)
    on left: 6, on right: 4 5
body_section (14)
    on left: 7, on right: 1
body_lines (15)
    on left: 8 9, on right: 7 8
body_line (16)
    on left: 10, on right: 8 9
footer (17)
    on left: 11, on right: 1


state 0

    NILANG	shift, and go to state 1

    nilang	go to state 21
    header	go to state 2



state 1

    header  ->  NILANG . FLOAT   (rule 2)

    FLOAT	shift, and go to state 3



state 2

    nilang  ->  header . template body_section footer   (rule 1)

    TYPE	shift, and go to state 4

    template	go to state 5
    typelines	go to state 6
    typeline	go to state 7



state 3

    header  ->  NILANG FLOAT .   (rule 2)

    $default	reduce using rule 2 (header)



state 4

    typeline  ->  TYPE . STRING   (rule 6)

    STRING	shift, and go to state 8



state 5

    nilang  ->  header template . body_section footer   (rule 1)

    INT 	shift, and go to state 9

    body_section	go to state 10
    body_lines	go to state 11
    body_line	go to state 12



state 6

    template  ->  typelines .   (rule 3)
    typelines  ->  typelines . typeline   (rule 4)

    TYPE	shift, and go to state 4

    $default	reduce using rule 3 (template)

    typeline	go to state 13



state 7

    typelines  ->  typeline .   (rule 5)

    $default	reduce using rule 5 (typelines)



state 8

    typeline  ->  TYPE STRING .   (rule 6)

    $default	reduce using rule 6 (typeline)



state 9

    body_line  ->  INT . INT INT INT STRING   (rule 10)

    INT 	shift, and go to state 14



state 10

    nilang  ->  header template body_section . footer   (rule 1)

    END 	shift, and go to state 15

    footer	go to state 16



state 11

    body_section  ->  body_lines .   (rule 7)
    body_lines  ->  body_lines . body_line   (rule 8)

    INT 	shift, and go to state 9

    $default	reduce using rule 7 (body_section)

    body_line	go to state 17



state 12

    body_lines  ->  body_line .   (rule 9)

    $default	reduce using rule 9 (body_lines)



state 13

    typelines  ->  typelines typeline .   (rule 4)

    $default	reduce using rule 4 (typelines)



state 14

    body_line  ->  INT INT . INT INT STRING   (rule 10)

    INT 	shift, and go to state 18



state 15

    footer  ->  END .   (rule 11)

    $default	reduce using rule 11 (footer)



state 16

    nilang  ->  header template body_section footer .   (rule 1)

    $default	reduce using rule 1 (nilang)



state 17

    body_lines  ->  body_lines body_line .   (rule 8)

    $default	reduce using rule 8 (body_lines)



state 18

    body_line  ->  INT INT INT . INT STRING   (rule 10)

    INT 	shift, and go to state 19



state 19

    body_line  ->  INT INT INT INT . STRING   (rule 10)

    STRING	shift, and go to state 20



state 20

    body_line  ->  INT INT INT INT STRING .   (rule 10)

    $default	reduce using rule 10 (body_line)



state 21

    $   	go to state 22



state 22

    $   	go to state 23



state 23

    $default	accept
